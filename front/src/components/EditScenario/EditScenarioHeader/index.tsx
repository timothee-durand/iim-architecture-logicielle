// this component will allow the user to create a scenario
// it will take a function as a prop, which will set the scenario's state
// when the user clicks on the generate button, the scenario will be generated
// and the function will be called with the new scenario as a parameter

import { useState } from "react";
import "./EditScenarioHeader.scss";
import Scenario from "../../../models/Scenario";

interface EditScenarioProps {
  onScenarioSubmit: (scenario: Scenario) => void;
}

const EditScenarioHeader: React.FC<EditScenarioProps> = ({
  onScenarioSubmit,
}) => {
  const [anecdote, setAnecdote] = useState("");
  const [agentNumber, setAgentNumber] = useState(0);

  const handleGenerate = () => {
    // this newScenario will be generated by an IA in the future
    const newScenario: Scenario = {
      title: "Scenario 1",
      context: "Context 1",
      objectives: "Objectives 1",
      stakes: "Stakes 1",
      enemies: [{ name: "Enemy 1", description: "Description 1" }],
      allies: [{ name: "Ally 1", description: "Description 1" }],
      resources: "Resources 1",
      constraints: "Constraints 1",
      rewards: "Rewards 1",
      stages: ["Stage 1", "Stage 2", "Stage 3"],
    };

    // we will call an ia to generate the scenario
    onScenarioSubmit(newScenario);
    console.log("Générer:", { anecdote, agentNumber });
  };
  const anecdotes: string[] = ["Anecdote 1", "Anecdote 2", "Anecdote 3"];

  return (
    <div className="editScenarioHeader-container">
      <div className="editScenarioHeader-anectode">
        <label className="editScenarioHeader-anectode__label --label">
          Anecdote
        </label>
        <select
          className="editScenarioHeader-anectode__selector"
          value={anecdote}
          onChange={(e) => setAnecdote(e.target.value)}
        >
          {anecdotes.map((anecdote, index) => (
            <option key={index} value={anecdote}>
              {anecdote}
            </option>
          ))}
        </select>
      </div>
      <div className="editScenarioHeader-agentNumber">
        <label className="editScenarioHeader-agentNumber__label --label">
          Agent Number
        </label>
        <input
          className="editScenarioHeader-agentNumber__selector"
          type="number"
          min={0}
          max={10}
          value={agentNumber}
          onChange={(e) => setAgentNumber(Number(e.target.value))}
        />
      </div>
      <button onClick={handleGenerate}>Generate</button>
    </div>
  );
};

export default EditScenarioHeader;
